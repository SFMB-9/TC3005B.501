import { Static } from '@sinclair/typebox';
declare const GatsbyPageSchema: import("@sinclair/typebox").TObject<{
    mode: import("@sinclair/typebox").TUnsafe<"SSG" | "DSG" | "SSR">;
    path: import("@sinclair/typebox").TString<string>;
}>;
export type GatsbyPage = Static<typeof GatsbyPageSchema>;
declare const GatsbyFunctionSchema: import("@sinclair/typebox").TObject<{
    functionRoute: import("@sinclair/typebox").TString<string>;
    originalAbsoluteFilePath: import("@sinclair/typebox").TString<string>;
}>;
export type GatsbyFunction = Static<typeof GatsbyFunctionSchema>;
declare const GatsbyRedirectSchema: import("@sinclair/typebox").TObject<{
    fromPath: import("@sinclair/typebox").TString<string>;
    toPath: import("@sinclair/typebox").TString<string>;
    isPermanent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
}>;
export type GatsbyRedirect = Static<typeof GatsbyRedirectSchema>;
declare const GatsbyConfigSchema: import("@sinclair/typebox").TObject<{
    trailingSlash: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<"always" | "never" | "ignore" | "legacy">>;
    pathPrefix: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
}>;
export type GatsbyConfig = Static<typeof GatsbyConfigSchema>;
declare const GatsbyStateSchema: import("@sinclair/typebox").TObject<{
    pages: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TTuple<[import("@sinclair/typebox").TString<string>, import("@sinclair/typebox").TObject<{
        mode: import("@sinclair/typebox").TUnsafe<"SSG" | "DSG" | "SSR">;
        path: import("@sinclair/typebox").TString<string>;
    }>]>>;
    redirects: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        fromPath: import("@sinclair/typebox").TString<string>;
        toPath: import("@sinclair/typebox").TString<string>;
        isPermanent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    }>>;
    functions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        functionRoute: import("@sinclair/typebox").TString<string>;
        originalAbsoluteFilePath: import("@sinclair/typebox").TString<string>;
    }>>;
    config: import("@sinclair/typebox").TObject<{
        trailingSlash: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<"always" | "never" | "ignore" | "legacy">>;
        pathPrefix: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
    }>;
}>;
export type GatsbyState = Static<typeof GatsbyStateSchema>;
export declare const validateGatsbyState: import("@sinclair/typebox/compiler").TypeCheck<import("@sinclair/typebox").TObject<{
    pages: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TTuple<[import("@sinclair/typebox").TString<string>, import("@sinclair/typebox").TObject<{
        mode: import("@sinclair/typebox").TUnsafe<"SSG" | "DSG" | "SSR">;
        path: import("@sinclair/typebox").TString<string>;
    }>]>>;
    redirects: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        fromPath: import("@sinclair/typebox").TString<string>;
        toPath: import("@sinclair/typebox").TString<string>;
        isPermanent: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    }>>;
    functions: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        functionRoute: import("@sinclair/typebox").TString<string>;
        originalAbsoluteFilePath: import("@sinclair/typebox").TString<string>;
    }>>;
    config: import("@sinclair/typebox").TObject<{
        trailingSlash: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnsafe<"always" | "never" | "ignore" | "legacy">>;
        pathPrefix: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
    }>;
}>>;
export {};
//# sourceMappingURL=schemas.d.ts.map